{
    "swagger": "2.0",
    "host": "qx-XXXXXX.local:8080",
    "basePath": "/api/v1",
    "info": {
        "title": "Qx REST API",
        "version": "v1",
        "description": "API for remote control of key areas of Qx functionality. Correct as of Qx software version 4.5. This document applies to Qx units running in \"SDI\" firmware mode only."
    },
    "paths": {
        "/aesIO": {
            "get": {
                "tags": [
                    "aesIO"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/aesIO/config": {
            "get": {
                "tags": [
                    "aesIO"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/aesIOconfigGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "aesIO"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/aesIOconfigPUT"
                        }
                    },
                    "400": {
                        "description": "One or more of \"aes1\", \"aes2\", \"aes3\", \"aes4\", \"passthroughSource\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aesIOconfigPUTparameter"
                        }
                    }
                ]
            }
        },
        "/aesIO/info": {
            "get": {
                "tags": [
                    "aesIO"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/aesIOinfoGET"
                        }
                    }
                }
            }
        },
        "/analyser": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/analyser/ancillaryInspector": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyserancillaryInspectorGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "One or more of \"identifierSelect\", \"did\", \"sdid\", \"subImageSearch\", \"rangeSelect\", \"firstLine\", \"lastLine\", \"hancVancSelect\", \"yPosCPosSelect\", \"triggerOnlyOnErrors\", \"searchChecksumErrors\", \"searchDBNErrors\", \"searchParityErrors\", \"searchAncGapErrors\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/analyserancillaryInspectorPUTparameter"
                        }
                    }
                ]
            }
        },
        "/analyser/ancillaryStatus": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyserancillaryStatusGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "One or more of \"reset\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/analyserancillaryStatusPUTparameter"
                        }
                    }
                ]
            }
        },
        "/analyser/audioMeter": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyseraudioMeterGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "One or more of \"ballistics\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/analyseraudioMeterPUTparameter"
                        }
                    }
                ]
            }
        },
        "/analyser/cableLength": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analysercableLengthGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "\"cableType\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/analysercableLengthPUTparameter"
                        }
                    }
                ]
            }
        },
        "/analyser/crcSummary": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analysercrcSummaryGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "One or more of \"action\", \"ignoreCrcOnSwitchLines\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/analysercrcSummaryPUTparameter"
                        }
                    }
                ]
            }
        },
        "/analyser/cursors": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/analyser/cursors/activePictureCursor": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analysercursorsactivePictureCursorGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "\"activePictureLine\", \"activePicturePixel\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/analysercursorsactivePictureCursorPUTparameter"
                        }
                    }
                ]
            }
        },
        "/analyser/dataview": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyserdataviewGET"
                        }
                    }
                }
            }
        },
        "/analyser/detail": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/analyser/detail/crc": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyserdetailcrcGET"
                        }
                    }
                }
            }
        },
        "/analyser/loudness": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/analyser/loudness/config": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyserloudnessconfigGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyserloudnessconfigPUT"
                        }
                    },
                    "400": {
                        "description": "One or more of \"audioAssignment\", \"standard\", \"meterTarget\", \"meterTolerance\", \"truePeakAlarm\", \"action\", \"logDuration_mins\", \"logLifetime_days\", \"logFilename\", \"control\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/analyserloudnessconfigPUTparameter"
                        }
                    }
                ]
            }
        },
        "/analyser/loudness/info": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyserloudnessinfoGET"
                        }
                    }
                }
            }
        },
        "/analyser/overrideVideoStandard": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/analyser/overrideVideoStandard/config": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyseroverrideVideoStandardconfigGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "One or more of \"manualOverrideEnabled\", \"overrideStandard\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/analyseroverrideVideoStandardconfigPUTparameter"
                        }
                    }
                ]
            }
        },
        "/analyser/prbs": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyserprbsGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyserprbsPUT"
                        }
                    },
                    "400": {
                        "description": "One or more of \"receiveMode\", \"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/analyserprbsPUTparameter"
                        }
                    }
                ]
            }
        },
        "/analyser/status": {
            "get": {
                "tags": [
                    "analyser"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/analyserstatusGET"
                        }
                    }
                }
            }
        },
        "/dolbyDecoder1": {
            "get": {
                "tags": [
                    "dolbyDecoder1"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/dolbyDecoder1/config": {
            "get": {
                "tags": [
                    "dolbyDecoder1"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/dolbyDecoder1configGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "dolbyDecoder1"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/dolbyDecoder1configPUT"
                        }
                    },
                    "400": {
                        "description": "One or more of \"source\", \"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dolbyDecoder1configPUTparameter"
                        }
                    }
                ]
            }
        },
        "/dolbyDecoder1/metadata": {
            "get": {
                "tags": [
                    "dolbyDecoder1"
                ],
                "responses": {
                    "404": {
                        "description": "The requested resource could not be found",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/dolbyDecoder1/status": {
            "get": {
                "tags": [
                    "dolbyDecoder1"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/dolbyDecoder1statusGET"
                        }
                    }
                }
            }
        },
        "/eventlog": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/eventlog/config": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/eventlog/config/audioInputPresence": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigaudioInputPresenceGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigaudioInputPresencePUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigaudioInputPresencePUTparameter"
                        }
                    }
                ]
            }
        },
        "/eventlog/config/ipInterfaces": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "503": {
                        "description": "Resource does not exist in SDI mode",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "503": {
                        "description": "Resource does not exist in SDI mode",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": []
            }
        },
        "/eventlog/config/ipRx": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "503": {
                        "description": "Resource does not exist in SDI mode",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "503": {
                        "description": "Resource does not exist in SDI mode",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": []
            }
        },
        "/eventlog/config/ipTx": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "503": {
                        "description": "Resource does not exist in SDI mode",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "503": {
                        "description": "Resource does not exist in SDI mode",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": []
            }
        },
        "/eventlog/config/jitterAlignment": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigjitterAlignmentGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigjitterAlignmentPUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigjitterAlignmentPUTparameter"
                        }
                    }
                ]
            }
        },
        "/eventlog/config/jitterTiming": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigjitterTimingGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigjitterTimingPUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigjitterTimingPUTparameter"
                        }
                    }
                ]
            }
        },
        "/eventlog/config/ptp": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "503": {
                        "description": "Resource does not exist in SDI mode",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "503": {
                        "description": "Resource does not exist in SDI mode",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": []
            }
        },
        "/eventlog/config/referenceLocking": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigreferenceLockingGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigreferenceLockingPUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigreferenceLockingPUTparameter"
                        }
                    }
                ]
            }
        },
        "/eventlog/config/restApi": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigrestApiGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigrestApiPUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigrestApiPUTparameter"
                        }
                    }
                ]
            }
        },
        "/eventlog/config/scte104": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigscte104GET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigscte104PUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigscte104PUTparameter"
                        }
                    }
                ]
            }
        },
        "/eventlog/config/sdiInputRate": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigsdiInputRateGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigsdiInputRatePUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigsdiInputRatePUTparameter"
                        }
                    }
                ]
            }
        },
        "/eventlog/config/sdiInputStandard": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigsdiInputStandardGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigsdiInputStandardPUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigsdiInputStandardPUTparameter"
                        }
                    }
                ]
            }
        },
        "/eventlog/config/sfp": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigsfpGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigsfpPUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventlogconfigsfpPUTparameter"
                        }
                    }
                ]
            }
        },
        "/eventlog/logs": {
            "get": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventloglogsGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eventlog"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eventloglogsPUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eventloglogsPUTparameter"
                        }
                    }
                ]
            }
        },
        "/eye": {
            "get": {
                "tags": [
                    "eye"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/eye/analysisParameters": {
            "get": {
                "tags": [
                    "eye"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eyeanalysisParametersGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "eye"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eyeanalysisParametersPUT"
                        }
                    },
                    "400": {
                        "description": "One or more of \"analysisMethod\", \"amplitudeMeasurementWindowSize_percent\", \"amplitudeMeasurementWindowOffset_percent\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/eyeanalysisParametersPUTparameter"
                        }
                    }
                ]
            }
        },
        "/eye/status": {
            "get": {
                "tags": [
                    "eye"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/eyestatusGET"
                        }
                    }
                }
            }
        },
        "/generator": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/generator/audio": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatoraudioGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "One or more of \"mode\", \"quickConfig\", \"customConfig\", \"subImage\", \"audioGroup\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatoraudioPUTparameter"
                        }
                    }
                ]
            }
        },
        "/generator/bouncingBox": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorbouncingBoxGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorbouncingBoxPUT"
                        }
                    },
                    "400": {
                        "description": "\"enabled\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatorbouncingBoxPUTparameter"
                        }
                    }
                ]
            }
        },
        "/generator/jitterInsertion": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorjitterInsertionGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorjitterInsertionPUT"
                        }
                    },
                    "400": {
                        "description": "One or more of \"mode\", \"frequency_Hz\", \"AmplitudePeakToPeak_ui\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatorjitterInsertionPUTparameter"
                        }
                    }
                ]
            }
        },
        "/generator/outputCopy": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatoroutputCopyGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatoroutputCopyPUT"
                        }
                    },
                    "400": {
                        "description": "\"enabled\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatoroutputCopyPUTparameter"
                        }
                    }
                ]
            }
        },
        "/generator/prbs": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorprbsGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorprbsPUT"
                        }
                    },
                    "400": {
                        "description": "One or more of \"mode\", \"invert\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatorprbsPUTparameter"
                        }
                    }
                ]
            }
        },
        "/generator/sdiDriverGain": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorsdiDriverGainGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "One or more of \"driverGain_percent\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatorsdiDriverGainPUTparameter"
                        }
                    }
                ]
            }
        },
        "/generator/sdiDriverPreEmphasis": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorsdiDriverPreEmphasisGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "One or more of \"driverPreEmphasis\", \"driverPreEmphasisTimeConstant\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatorsdiDriverPreEmphasisPUTparameter"
                        }
                    }
                ]
            }
        },
        "/generator/sdiOutputMute": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorsdiOutputMuteGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorsdiOutputMutePUT"
                        }
                    },
                    "400": {
                        "description": "One or more of \"sdiOutputMuteA\", \"sdiOutputMuteB\", \"sdiOutputMuteC\", \"sdiOutputMuteD\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatorsdiOutputMutePUTparameter"
                        }
                    }
                ]
            }
        },
        "/generator/sdiScrambler": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorsdiScramblerGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorsdiScramblerPUT"
                        }
                    },
                    "400": {
                        "description": "\"enabled\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatorsdiScramblerPUTparameter"
                        }
                    }
                ]
            }
        },
        "/generator/standards": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/generator/standards/1280x720p25": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/generator/standards/1280x720p25/YCbCr%3A422%3A10": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/generator/standards/1280x720p25/YCbCr%3A422%3A10/1.5G_HLG_Rec.2020": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/generator/standards/1280x720p25/YCbCr%3A422%3A10/1.5G_HLG_Rec.2020/100%25%20Bars": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorstandards1280x720p25YCbCr%3A422%3A101.5G_HLG_Rec.2020100%25%20BarsGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorstandards1280x720p25YCbCr%3A422%3A101.5G_HLG_Rec.2020100%25%20BarsPUT"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected and \"pathological\" optional in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatorstandards1280x720p25YCbCr%3A422%3A101.5G_HLG_Rec.2020100%25%20BarsPUTparameter"
                        }
                    }
                ]
            }
        },
        "/generator/status": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorstatusGET"
                        }
                    }
                }
            }
        },
        "/generator/syncBitInserter": {
            "get": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorsyncBitInserterGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "generator"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/generatorsyncBitInserterPUT"
                        }
                    },
                    "400": {
                        "description": "\"enabled\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generatorsyncBitInserterPUTparameter"
                        }
                    }
                ]
            }
        },
        "/inputOutput": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/inputOutput/sdiIn": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/inputOutput/sdiIn/inputType": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiIninputTypeGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiIninputTypePUT"
                        }
                    },
                    "400": {
                        "description": "\"type\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiIninputTypePUTparameter"
                        }
                    }
                ]
            }
        },
        "/inputOutput/sdiOut": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/inputOutput/sdiOut/bnc": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/inputOutput/sdiOut/bnc/generatorOutputCopy": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutbncgeneratorOutputCopyGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutbncgeneratorOutputCopyPUT"
                        }
                    },
                    "400": {
                        "description": "\"enabled\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutbncgeneratorOutputCopyPUTparameter"
                        }
                    }
                ]
            }
        },
        "/inputOutput/sdiOut/bnc/loopSdiBncIn": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutbncloopSdiBncInGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutbncloopSdiBncInPUT"
                        }
                    },
                    "400": {
                        "description": "\"enabled\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutbncloopSdiBncInPUTparameter"
                        }
                    }
                ]
            }
        },
        "/inputOutput/sdiOut/bnc/sdiOutputSetting": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutbncsdiOutputSettingGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutbncsdiOutputSettingPUT"
                        }
                    },
                    "400": {
                        "description": "One or more of \"sdiOutputA\", \"sdiOutputB\", \"sdiOutputC\", \"sdiOutputD\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutbncsdiOutputSettingPUTparameter"
                        }
                    }
                ]
            }
        },
        "/inputOutput/sdiOut/outputType": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutoutputTypeGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutoutputTypePUT"
                        }
                    },
                    "400": {
                        "description": "\"type\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutoutputTypePUTparameter"
                        }
                    }
                ]
            }
        },
        "/inputOutput/sdiOut/sfp": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/inputOutput/sdiOut/sfp/generatorOutputCopy": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutsfpgeneratorOutputCopyGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutsfpgeneratorOutputCopyPUT"
                        }
                    },
                    "400": {
                        "description": "\"enabled\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutsfpgeneratorOutputCopyPUTparameter"
                        }
                    }
                ]
            }
        },
        "/inputOutput/sdiOut/sfp/sdiOutputSetting": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutsfpsdiOutputSettingGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "One or more of \"sdiOutputA\", \"sdiOutputB\", \"sdiOutputC\", \"sdiOutputD\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputOutputsdiOutsfpsdiOutputSettingPUTparameter"
                        }
                    }
                ]
            }
        },
        "/inputOutput/status": {
            "get": {
                "tags": [
                    "inputOutput"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/inputOutputstatusGET"
                        }
                    }
                }
            }
        },
        "/jitter": {
            "get": {
                "tags": [
                    "jitter"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/jitter/status": {
            "get": {
                "tags": [
                    "jitter"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/jitterstatusGET"
                        }
                    }
                }
            }
        },
        "/presets": {
            "get": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/presets/userPresets": {
            "get": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/presetsuserPresetsPOST"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presetsuserPresetsPOSTparameter"
                        }
                    }
                ]
            }
        },
        "/presets/userPresets/Documentation_4.5": {
            "get": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/presetsuserPresetsDocumentation_4.5GET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected and \"newPresetName\" expected when \"action\" has value \"rename\" in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presetsuserPresetsDocumentation_4.5PUTparameter"
                        }
                    }
                ]
            },
            "delete": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/presets/userPresets/New%2520Preset": {
            "get": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/presetsuserPresetsNew%2520PresetGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected and \"newPresetName\" expected when \"action\" has value \"rename\" in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presetsuserPresetsNew%2520PresetPUTparameter"
                        }
                    }
                ]
            },
            "delete": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/presets/userPresets/lastKnownState_sdiStressrenamedrenamedrenamedrenamedrenamedrenamedrenamed": {
            "get": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/presetsuserPresetslastKnownState_sdiStressrenamedrenamedrenamedrenamedrenamedrenamedrenamedGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected and \"newPresetName\" expected when \"action\" has value \"rename\" in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presetsuserPresetslastKnownState_sdiStressrenamedrenamedrenamedrenamedrenamedrenamedrenamedPUTparameter"
                        }
                    }
                ]
            },
            "delete": {
                "tags": [
                    "presets"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/screenshots": {
            "get": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/screenshots/images": {
            "get": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/screenshotsimagesPOST"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/screenshotsimagesPOSTparameter"
                        }
                    }
                ]
            }
        },
        "/screenshots/images/2021-11-17T110613renamedrenamed": {
            "get": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/screenshotsimages2021-11-17T110613renamedrenamedGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected and \"newFilename\" expected when \"action\" has value \"rename\" in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/screenshotsimages2021-11-17T110613renamedrenamedPUTparameter"
                        }
                    }
                ]
            },
            "delete": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/screenshots/images/2021-11-17T110902renamedrenamed": {
            "get": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/screenshotsimages2021-11-17T110902renamedrenamedGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected and \"newFilename\" expected when \"action\" has value \"rename\" in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/screenshotsimages2021-11-17T110902renamedrenamedPUTparameter"
                        }
                    }
                ]
            },
            "delete": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/screenshots/images/2021-11-17T112027renamed": {
            "get": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/screenshotsimages2021-11-17T112027renamedGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected and \"newFilename\" expected when \"action\" has value \"rename\" in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/screenshotsimages2021-11-17T112027renamedPUTparameter"
                        }
                    }
                ]
            },
            "delete": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/screenshots/images/2021-11-17T144555": {
            "get": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/screenshotsimages2021-11-17T144555GET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "\"action\" expected and \"newFilename\" expected when \"action\" has value \"rename\" in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/screenshotsimages2021-11-17T144555PUTparameter"
                        }
                    }
                ]
            },
            "delete": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/screenshots/latest": {
            "get": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/screenshotslatestGET"
                        }
                    }
                }
            }
        },
        "/screenshots/oldest": {
            "get": {
                "tags": [
                    "screenshots"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/screenshotsoldestGET"
                        }
                    }
                }
            }
        },
        "/sfpInfo": {
            "get": {
                "tags": [
                    "sfpInfo"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/sfpInfo/sfpA": {
            "get": {
                "tags": [
                    "sfpInfo"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/sfpInfosfpAGET"
                        }
                    }
                }
            }
        },
        "/sfpInfo/sfpB": {
            "get": {
                "tags": [
                    "sfpInfo"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/sfpInfosfpBGET"
                        }
                    }
                }
            }
        },
        "/system": {
            "get": {
                "tags": [
                    "system"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/system/about": {
            "get": {
                "tags": [
                    "system"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/systemaboutGET"
                        }
                    }
                }
            }
        },
        "/timing": {
            "get": {
                "tags": [
                    "timing"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    }
                }
            }
        },
        "/timing/reference": {
            "get": {
                "tags": [
                    "timing"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/timingreferenceGET"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "timing"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GenericApiResponse"
                        }
                    },
                    "400": {
                        "description": "One or more of \"systemReferenceType\", \"referenceTimingMeterRange\", \"inputMeasurementOffsetType\", \"inputMeasurementLineOffset\", \"inputMeasurementPixelOffset\", \"inputTimeOffset_us\", \"inputCommand\" expected in JSON request body",
                        "schema": {
                            "$ref": "#/definitions/GenericApiError"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/timingreferencePUTparameter"
                        }
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "aesIO"
        },
        {
            "name": "analyser"
        },
        {
            "name": "dolbyDecoder1"
        },
        {
            "name": "eventlog"
        },
        {
            "name": "eye"
        },
        {
            "name": "generator"
        },
        {
            "name": "inputOutput"
        },
        {
            "name": "jitter"
        },
        {
            "name": "presets"
        },
        {
            "name": "screenshots"
        },
        {
            "name": "sfpInfo"
        },
        {
            "name": "system"
        },
        {
            "name": "timing"
        }
    ],
    "definitions": {
        "GenericApiError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "GenericApiResponse": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "aesIOconfigGET": {
            "type": "object",
            "properties": {
                "aes1": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer"
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "aes2": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer"
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "aes3": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer"
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "aes4": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer"
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "passthroughConfigValid": {
                    "type": "boolean"
                },
                "passthroughSource": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "aesIOconfigPUT": {
            "type": "object",
            "properties": {
                "aes1": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer"
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "aes2": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer"
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "aes3": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer"
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "aes4": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer"
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "passthroughConfigValid": {
                    "type": "boolean"
                },
                "passthroughSource": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "aesIOconfigPUTparameter": {
            "type": "object",
            "properties": {
                "aes1": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 8
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 2
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "aes2": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 8
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 2
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "aes3": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 8
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 2
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "aes4": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 8
                        },
                        "mode": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 2
                        },
                        "transmitSource": {
                            "type": "string"
                        }
                    }
                },
                "passthroughSource": {
                    "type": "string",
                    "enum": [
                        "aes1",
                        "aes2",
                        "aes3",
                        "aes4"
                    ]
                }
            }
        },
        "aesIOinfoGET": {
            "type": "object",
            "properties": {
                "aes1PoweredOn": {
                    "type": "boolean"
                },
                "aes2PoweredOn": {
                    "type": "boolean"
                },
                "aes3PoweredOn": {
                    "type": "boolean"
                },
                "aes4PoweredOn": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analyserancillaryInspectorGET": {
            "type": "object",
            "properties": {
                "configData": {
                    "type": "object",
                    "properties": {
                        "errorTriggers": {
                            "type": "object",
                            "properties": {
                                "searchAncGapErrors": {
                                    "type": "boolean"
                                },
                                "searchChecksumErrors": {
                                    "type": "boolean"
                                },
                                "searchDBNErrors": {
                                    "type": "boolean"
                                },
                                "searchParityErrors": {
                                    "type": "boolean"
                                },
                                "triggerOnlyOnErrors": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "hancVancSelect": {
                            "type": "string"
                        },
                        "identifier": {
                            "type": "object",
                            "properties": {
                                "did": {
                                    "type": "integer"
                                },
                                "identifierSelect": {
                                    "type": "string"
                                },
                                "sdid": {
                                    "type": "integer"
                                }
                            }
                        },
                        "range": {
                            "type": "object",
                            "properties": {
                                "firstLine": {
                                    "type": "integer"
                                },
                                "lastLine": {
                                    "type": "integer"
                                },
                                "rangeSelect": {
                                    "type": "string"
                                }
                            }
                        },
                        "subImageSearch": {
                            "type": "string"
                        },
                        "yPosCPosSelect": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analyserancillaryInspectorPUTparameter": {
            "type": "object",
            "properties": {
                "did": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 999999
                },
                "firstLine": {
                    "type": "integer",
                    "minimum": -999999,
                    "maximum": 999999
                },
                "hancVancSelect": {
                    "type": "string",
                    "enum": [
                        "both",
                        "hanc",
                        "vanc"
                    ]
                },
                "identifierSelect": {
                    "type": "string",
                    "enum": [
                        "any",
                        "custom"
                    ]
                },
                "lastLine": {
                    "type": "integer",
                    "minimum": -999999,
                    "maximum": 999999
                },
                "rangeSelect": {
                    "type": "string",
                    "enum": [
                        "any",
                        "inside",
                        "outside"
                    ]
                },
                "sdid": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 999999
                },
                "searchAncGapErrors": {
                    "type": "boolean"
                },
                "searchChecksumErrors": {
                    "type": "boolean"
                },
                "searchDBNErrors": {
                    "type": "boolean"
                },
                "searchParityErrors": {
                    "type": "boolean"
                },
                "subImageSearch": {
                    "type": "string",
                    "enum": [
                        "any",
                        "subImage1",
                        "subImage2",
                        "subImage3",
                        "subImage4",
                        "linkBSubImage1",
                        "linkBSubImage2",
                        "linkBSubImage3",
                        "linkBSubImage4"
                    ]
                },
                "triggerOnlyOnErrors": {
                    "type": "boolean"
                },
                "yPosCPosSelect": {
                    "type": "string",
                    "enum": [
                        "both",
                        "yPos",
                        "cPos"
                    ]
                }
            }
        },
        "analyserancillaryStatusGET": {
            "type": "object",
            "properties": {
                "ancStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/analyserancillaryStatusGETancStatus"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analyserancillaryStatusGETancStatus": {
            "type": "object",
            "properties": {
                "C-Pos": {
                    "type": "object",
                    "properties": {
                        "checksumError": {
                            "type": "object",
                            "properties": {
                                "hasOccurred": {
                                    "type": "boolean"
                                },
                                "present": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "dataBlockNumberError": {
                            "type": "object",
                            "properties": {
                                "hasOccurred": {
                                    "type": "boolean"
                                },
                                "present": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "parityError": {
                            "type": "object",
                            "properties": {
                                "hasOccurred": {
                                    "type": "boolean"
                                },
                                "present": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "presence": {
                            "type": "object",
                            "properties": {
                                "firstSeen": {
                                    "type": "object",
                                    "properties": {
                                        "endTimeStamp": {
                                            "type": "string"
                                        },
                                        "startTimeStamp": {
                                            "type": "string"
                                        },
                                        "systemTimeStamp": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "hasOccurred": {
                                    "type": "boolean"
                                },
                                "lastSeen": {
                                    "type": "object",
                                    "properties": {
                                        "endTimeStamp": {
                                            "type": "string"
                                        },
                                        "startTimeStamp": {
                                            "type": "string"
                                        },
                                        "systemTimeStamp": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "present": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "description": {
                    "type": "string"
                },
                "didSdid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "analyserancillaryStatusPUTparameter": {
            "type": "object",
            "properties": {
                "reset": {
                    "type": "boolean"
                }
            }
        },
        "analyseraudioMeterGET": {
            "type": "object",
            "properties": {
                "audioLevels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/analyseraudioMeterGETaudioLevels"
                    }
                },
                "audioPhase": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/analyseraudioMeterGETaudioPhase"
                    }
                },
                "ballistics": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analyseraudioMeterGETaudioLevels": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "integer"
                },
                "gain_dBFS": {
                    "type": "number"
                },
                "sdi": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "pair": {
                            "type": "integer"
                        },
                        "position": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "analyseraudioMeterGETaudioPhase": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string"
                },
                "sdi": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "pair": {
                            "type": "integer"
                        }
                    }
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "analyseraudioMeterPUTparameter": {
            "type": "object",
            "properties": {
                "ballistics": {
                    "type": "string",
                    "enum": [
                        "PPM Type I",
                        "PPM Type II",
                        "Vu",
                        "VuFr",
                        "Fast"
                    ]
                }
            }
        },
        "analysercableLengthGET": {
            "type": "object",
            "properties": {
                "attenuationA": {
                    "type": "integer"
                },
                "attenuationB": {
                    "type": "number"
                },
                "attenuationC": {
                    "type": "number"
                },
                "attenuationD": {
                    "type": "integer"
                },
                "cableType": {
                    "type": "string"
                },
                "lengthA": {
                    "type": "integer"
                },
                "lengthB": {
                    "type": "number"
                },
                "lengthC": {
                    "type": "number"
                },
                "lengthD": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analysercableLengthPUTparameter": {
            "type": "object",
            "properties": {
                "cableType": {
                    "type": "string",
                    "enum": [
                        "belden_8281",
                        "belden_1505",
                        "belden_1694a",
                        "belden_1855a",
                        "canare_l5cfb",
                        "image_1000"
                    ]
                }
            },
            "required": [
                "cableType"
            ]
        },
        "analysercrcSummaryGET": {
            "type": "object",
            "properties": {
                "activePictureCrcChanges": {
                    "type": "integer"
                },
                "errorCount": {
                    "type": "integer"
                },
                "ignoreCrcOnSwitchLines": {
                    "type": "string"
                },
                "inputFailures": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "okTime_ms": {
                    "type": "integer"
                },
                "rate_/s": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "timeSinceInputFailure": {
                    "type": "integer"
                }
            }
        },
        "analysercrcSummaryPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "reset"
                    ]
                },
                "ignoreCrcOnSwitchLines": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            }
        },
        "analysercursorsactivePictureCursorGET": {
            "type": "object",
            "properties": {
                "activePictureLine": {
                    "type": "integer"
                },
                "activePicturePixel": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "sourcePositionLine": {
                    "type": "integer"
                },
                "sourcePositionPixel": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analysercursorsactivePictureCursorPUTparameter": {
            "type": "object",
            "properties": {
                "activePictureLine": {
                    "type": "integer",
                    "minimum": -24,
                    "maximum": 725
                },
                "activePicturePixel": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 9999
                }
            },
            "required": [
                "activePicturePixel",
                "activePictureLine"
            ]
        },
        "analyserdataviewGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/analyserdataviewGETsamples"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analyserdataviewGETsamples": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "data": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                }
            }
        },
        "analyserdetailcrcGET": {
            "type": "object",
            "properties": {
                "activePictureCrc": {
                    "type": "string"
                },
                "activePictureCrcChanges": {
                    "type": "integer"
                },
                "ancErrorCountCPos": {
                    "type": "integer"
                },
                "ancErrorCountYPos": {
                    "type": "integer"
                },
                "errorCountCPos": {
                    "type": "integer"
                },
                "errorCountYPos": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "okTime_ms": {
                    "type": "integer"
                },
                "rate_/s": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analyserloudnessconfigGET": {
            "type": "object",
            "properties": {
                "audioAssignment": {
                    "type": "object",
                    "properties": {
                        "audioMode": {
                            "type": "string"
                        },
                        "channelAssignment": {
                            "type": "object",
                            "properties": {
                                "centre": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "left": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "leftSurround": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "lfe": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "right": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "rightSurround": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "control": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "logDuration_mins": {
                    "type": "integer"
                },
                "logFilename": {
                    "type": "string"
                },
                "logLifetime_days": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "meterTarget": {
                    "type": "object",
                    "properties": {
                        "integrated": {
                            "type": "integer"
                        },
                        "momentary": {
                            "type": "integer"
                        },
                        "shortTerm": {
                            "type": "integer"
                        }
                    }
                },
                "meterTolerance": {
                    "type": "object",
                    "properties": {
                        "integrated": {
                            "type": "integer"
                        },
                        "momentary": {
                            "type": "integer"
                        },
                        "shortTerm": {
                            "type": "integer"
                        }
                    }
                },
                "standard": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "truePeakAlarm": {
                    "type": "integer"
                }
            }
        },
        "analyserloudnessconfigPUT": {
            "type": "object",
            "properties": {
                "audioAssignment": {
                    "type": "object",
                    "properties": {
                        "audioMode": {
                            "type": "string"
                        },
                        "channelAssignment": {
                            "type": "object",
                            "properties": {
                                "centre": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "left": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "leftSurround": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "lfe": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "right": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "rightSurround": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string"
                                        },
                                        "subimage": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "control": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "logDuration_mins": {
                    "type": "integer"
                },
                "logFilename": {
                    "type": "string"
                },
                "logLifetime_days": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "meterTarget": {
                    "type": "object",
                    "properties": {
                        "integrated": {
                            "type": "integer"
                        },
                        "momentary": {
                            "type": "integer"
                        },
                        "shortTerm": {
                            "type": "integer"
                        }
                    }
                },
                "meterTolerance": {
                    "type": "object",
                    "properties": {
                        "integrated": {
                            "type": "integer"
                        },
                        "momentary": {
                            "type": "integer"
                        },
                        "shortTerm": {
                            "type": "integer"
                        }
                    }
                },
                "standard": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "truePeakAlarm": {
                    "type": "integer"
                }
            }
        },
        "analyserloudnessconfigPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "loudnessMonitoringReset",
                        "truePeakValueReset",
                        "errorCountsReset"
                    ]
                },
                "audioAssignment": {
                    "type": "object",
                    "properties": {
                        "audioMode": {
                            "type": "string",
                            "enum": [
                                "stereo",
                                "5.1"
                            ]
                        },
                        "channelAssignment": {
                            "type": "object",
                            "properties": {
                                "centre": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string",
                                            "enum": [
                                                "group1Pair1Left",
                                                "group1Pair1Right",
                                                "group1Pair2Left",
                                                "group1Pair2Right",
                                                "group2Pair1Left",
                                                "group2Pair1Right",
                                                "group2Pair2Left",
                                                "group2Pair2Right",
                                                "group3Pair1Left",
                                                "group3Pair1Right",
                                                "group3Pair2Left",
                                                "group3Pair2Right",
                                                "group4Pair1Left",
                                                "group4Pair1Right",
                                                "group4Pair2Left",
                                                "group4Pair2Right",
                                                "group5Pair1Left",
                                                "group5Pair1Right",
                                                "group5Pair2Left",
                                                "group5Pair2Right",
                                                "group6Pair1Left",
                                                "group6Pair1Right",
                                                "group6Pair2Left",
                                                "group6Pair2Right",
                                                "group7Pair1Left",
                                                "group7Pair1Right",
                                                "group7Pair2Left",
                                                "group7Pair2Right",
                                                "group8Pair1Left",
                                                "group8Pair1Right",
                                                "group8Pair2Left",
                                                "group8Pair2Right"
                                            ]
                                        },
                                        "subimage": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 4
                                        }
                                    },
                                    "required": [
                                        "subimage",
                                        "channel"
                                    ]
                                },
                                "left": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string",
                                            "enum": [
                                                "group1Pair1Left",
                                                "group1Pair1Right",
                                                "group1Pair2Left",
                                                "group1Pair2Right",
                                                "group2Pair1Left",
                                                "group2Pair1Right",
                                                "group2Pair2Left",
                                                "group2Pair2Right",
                                                "group3Pair1Left",
                                                "group3Pair1Right",
                                                "group3Pair2Left",
                                                "group3Pair2Right",
                                                "group4Pair1Left",
                                                "group4Pair1Right",
                                                "group4Pair2Left",
                                                "group4Pair2Right",
                                                "group5Pair1Left",
                                                "group5Pair1Right",
                                                "group5Pair2Left",
                                                "group5Pair2Right",
                                                "group6Pair1Left",
                                                "group6Pair1Right",
                                                "group6Pair2Left",
                                                "group6Pair2Right",
                                                "group7Pair1Left",
                                                "group7Pair1Right",
                                                "group7Pair2Left",
                                                "group7Pair2Right",
                                                "group8Pair1Left",
                                                "group8Pair1Right",
                                                "group8Pair2Left",
                                                "group8Pair2Right"
                                            ]
                                        },
                                        "subimage": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 4
                                        }
                                    },
                                    "required": [
                                        "channel",
                                        "subimage"
                                    ]
                                },
                                "leftSurround": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string",
                                            "enum": [
                                                "group1Pair1Left",
                                                "group1Pair1Right",
                                                "group1Pair2Left",
                                                "group1Pair2Right",
                                                "group2Pair1Left",
                                                "group2Pair1Right",
                                                "group2Pair2Left",
                                                "group2Pair2Right",
                                                "group3Pair1Left",
                                                "group3Pair1Right",
                                                "group3Pair2Left",
                                                "group3Pair2Right",
                                                "group4Pair1Left",
                                                "group4Pair1Right",
                                                "group4Pair2Left",
                                                "group4Pair2Right",
                                                "group5Pair1Left",
                                                "group5Pair1Right",
                                                "group5Pair2Left",
                                                "group5Pair2Right",
                                                "group6Pair1Left",
                                                "group6Pair1Right",
                                                "group6Pair2Left",
                                                "group6Pair2Right",
                                                "group7Pair1Left",
                                                "group7Pair1Right",
                                                "group7Pair2Left",
                                                "group7Pair2Right",
                                                "group8Pair1Left",
                                                "group8Pair1Right",
                                                "group8Pair2Left",
                                                "group8Pair2Right"
                                            ]
                                        },
                                        "subimage": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 4
                                        }
                                    },
                                    "required": [
                                        "channel",
                                        "subimage"
                                    ]
                                },
                                "lfe": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string",
                                            "enum": [
                                                "group1Pair1Left",
                                                "group1Pair1Right",
                                                "group1Pair2Left",
                                                "group1Pair2Right",
                                                "group2Pair1Left",
                                                "group2Pair1Right",
                                                "group2Pair2Left",
                                                "group2Pair2Right",
                                                "group3Pair1Left",
                                                "group3Pair1Right",
                                                "group3Pair2Left",
                                                "group3Pair2Right",
                                                "group4Pair1Left",
                                                "group4Pair1Right",
                                                "group4Pair2Left",
                                                "group4Pair2Right",
                                                "group5Pair1Left",
                                                "group5Pair1Right",
                                                "group5Pair2Left",
                                                "group5Pair2Right",
                                                "group6Pair1Left",
                                                "group6Pair1Right",
                                                "group6Pair2Left",
                                                "group6Pair2Right",
                                                "group7Pair1Left",
                                                "group7Pair1Right",
                                                "group7Pair2Left",
                                                "group7Pair2Right",
                                                "group8Pair1Left",
                                                "group8Pair1Right",
                                                "group8Pair2Left",
                                                "group8Pair2Right"
                                            ]
                                        },
                                        "subimage": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 4
                                        }
                                    },
                                    "required": [
                                        "subimage",
                                        "channel"
                                    ]
                                },
                                "right": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string",
                                            "enum": [
                                                "group1Pair1Left",
                                                "group1Pair1Right",
                                                "group1Pair2Left",
                                                "group1Pair2Right",
                                                "group2Pair1Left",
                                                "group2Pair1Right",
                                                "group2Pair2Left",
                                                "group2Pair2Right",
                                                "group3Pair1Left",
                                                "group3Pair1Right",
                                                "group3Pair2Left",
                                                "group3Pair2Right",
                                                "group4Pair1Left",
                                                "group4Pair1Right",
                                                "group4Pair2Left",
                                                "group4Pair2Right",
                                                "group5Pair1Left",
                                                "group5Pair1Right",
                                                "group5Pair2Left",
                                                "group5Pair2Right",
                                                "group6Pair1Left",
                                                "group6Pair1Right",
                                                "group6Pair2Left",
                                                "group6Pair2Right",
                                                "group7Pair1Left",
                                                "group7Pair1Right",
                                                "group7Pair2Left",
                                                "group7Pair2Right",
                                                "group8Pair1Left",
                                                "group8Pair1Right",
                                                "group8Pair2Left",
                                                "group8Pair2Right"
                                            ]
                                        },
                                        "subimage": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 4
                                        }
                                    },
                                    "required": [
                                        "subimage",
                                        "channel"
                                    ]
                                },
                                "rightSurround": {
                                    "type": "object",
                                    "properties": {
                                        "channel": {
                                            "type": "string",
                                            "enum": [
                                                "group1Pair1Left",
                                                "group1Pair1Right",
                                                "group1Pair2Left",
                                                "group1Pair2Right",
                                                "group2Pair1Left",
                                                "group2Pair1Right",
                                                "group2Pair2Left",
                                                "group2Pair2Right",
                                                "group3Pair1Left",
                                                "group3Pair1Right",
                                                "group3Pair2Left",
                                                "group3Pair2Right",
                                                "group4Pair1Left",
                                                "group4Pair1Right",
                                                "group4Pair2Left",
                                                "group4Pair2Right",
                                                "group5Pair1Left",
                                                "group5Pair1Right",
                                                "group5Pair2Left",
                                                "group5Pair2Right",
                                                "group6Pair1Left",
                                                "group6Pair1Right",
                                                "group6Pair2Left",
                                                "group6Pair2Right",
                                                "group7Pair1Left",
                                                "group7Pair1Right",
                                                "group7Pair2Left",
                                                "group7Pair2Right",
                                                "group8Pair1Left",
                                                "group8Pair1Right",
                                                "group8Pair2Left",
                                                "group8Pair2Right"
                                            ]
                                        },
                                        "subimage": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 4
                                        }
                                    },
                                    "required": [
                                        "subimage",
                                        "channel"
                                    ]
                                }
                            }
                        }
                    }
                },
                "control": {
                    "type": "string",
                    "enum": [
                        "start",
                        "stop",
                        "pause"
                    ]
                },
                "logDuration_mins": {
                    "type": "integer",
                    "enum": [
                        5,
                        15,
                        30,
                        60,
                        120,
                        180,
                        360,
                        720,
                        1440
                    ]
                },
                "logLifetime_days": {
                    "type": "integer",
                    "enum": [
                        1,
                        7,
                        14,
                        30
                    ]
                },
                "meterTarget": {
                    "type": "object",
                    "properties": {
                        "integrated": {
                            "type": "number",
                            "minimum": -60,
                            "maximum": -5
                        },
                        "momentary": {
                            "type": "number",
                            "minimum": -60,
                            "maximum": -5
                        },
                        "shortTerm": {
                            "type": "number",
                            "minimum": -60,
                            "maximum": -5
                        }
                    },
                    "required": [
                        "momentary",
                        "shortTerm",
                        "integrated"
                    ]
                },
                "meterTolerance": {
                    "type": "object",
                    "properties": {}
                },
                "standard": {
                    "type": "string",
                    "enum": [
                        "ebuLufs",
                        "ebuLu",
                        "ituLkfs",
                        "ituLu"
                    ]
                }
            }
        },
        "analyserloudnessinfoGET": {
            "type": "object",
            "properties": {
                "controlState": {
                    "type": "string"
                },
                "integratedValue": {
                    "type": "number"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "momentaryValue": {
                    "type": "number"
                },
                "shortTermValue": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                },
                "truePeakValue": {
                    "type": "number"
                }
            }
        },
        "analyseroverrideVideoStandardconfigGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "manualOverrideEnabled": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "overrideStandard": {
                    "type": "object",
                    "properties": {
                        "format": {
                            "type": "string"
                        },
                        "frame": {
                            "type": "string"
                        },
                        "gamut": {
                            "type": "string"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "type": {
                            "type": "string"
                        },
                        "width": {
                            "type": "integer"
                        }
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analyseroverrideVideoStandardconfigPUTparameter": {
            "type": "object",
            "properties": {
                "manualOverrideEnabled": {
                    "type": "boolean"
                },
                "overrideStandard": {
                    "type": "object",
                    "properties": {
                        "format": {
                            "type": "string",
                            "enum": [
                                "YCbCr:422:10",
                                "YCbCr:422:12",
                                "YCbCrA:4224:12",
                                "YCbCr:444:10",
                                "YCbCr:422:12",
                                "YCbCrA:4444:10",
                                "RGB:444:10",
                                "RGB:444:12",
                                "RGBA:4444:10"
                            ]
                        },
                        "frame": {
                            "type": "string",
                            "enum": [
                                "23.98p",
                                "23.98psf",
                                "24p",
                                "24psf",
                                "25p",
                                "25psf",
                                "29.97p",
                                "29.97psf",
                                "30p",
                                "30psf",
                                "47.95p",
                                "48p",
                                "50i",
                                "50p",
                                "59.94i",
                                "59.94p",
                                "60i",
                                "60p"
                            ]
                        },
                        "gamut": {
                            "type": "string",
                            "enum": [
                                "709",
                                "2020",
                                "HLG 2020",
                                "PQ 2020",
                                "S-Log3 2020"
                            ]
                        },
                        "height": {
                            "type": "integer",
                            "enum": [
                                720,
                                1080,
                                2160
                            ]
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "12G 2-SI",
                                "QL 3G A 2-SI",
                                "QL 3G A SqDv",
                                "QL 3G B 2-SI",
                                "QL 3G B SqDv",
                                "DL 6G 2-SI",
                                "6G 2-SI",
                                "QL 1.5G SqDv",
                                "3G A",
                                "3G B",
                                "1.5G"
                            ]
                        },
                        "width": {
                            "type": "integer",
                            "enum": [
                                1280,
                                1920,
                                2048,
                                3840,
                                4096
                            ]
                        }
                    },
                    "required": [
                        "gamut",
                        "height",
                        "type",
                        "width",
                        "format",
                        "frame"
                    ]
                }
            }
        },
        "analyserprbsGET": {
            "type": "object",
            "properties": {
                "analyserTime": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "receiveMode": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analyserprbsPUT": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "receiveMode": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "analyserprbsPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "reset"
                    ]
                },
                "receiveMode": {
                    "type": "string",
                    "enum": [
                        "Disabled",
                        "PRBS-7",
                        "PRBS-9",
                        "PRBS-15",
                        "PRBS-23",
                        "PRBS-31"
                    ]
                }
            }
        },
        "analyserstatusGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "standard": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "dolbyDecoder1configGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "source": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "location": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer"
                        }
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "dolbyDecoder1configPUT": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "source": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer"
                        },
                        "location": {
                            "type": "string"
                        },
                        "pair": {
                            "type": "integer"
                        }
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "dolbyDecoder1configPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "errorsReset"
                    ]
                },
                "source": {
                    "type": "object",
                    "properties": {
                        "group": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 8
                        },
                        "location": {
                            "type": "string",
                            "enum": [
                                "subImage1",
                                "subImage2",
                                "subImage3",
                                "subImage4",
                                "aes"
                            ]
                        },
                        "pair": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 2
                        },
                        "startingChannel": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 15
                        }
                    },
                    "required": [
                        "location"
                    ]
                }
            }
        },
        "dolbyDecoder1statusGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "eventlogconfigaudioInputPresenceGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigaudioInputPresencePUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigaudioInputPresencePUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "eventlogconfigjitterAlignmentGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigjitterAlignmentPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigjitterAlignmentPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "eventlogconfigjitterTimingGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigjitterTimingPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigjitterTimingPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "eventlogconfigreferenceLockingGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigreferenceLockingPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigreferenceLockingPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "eventlogconfigrestApiGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigrestApiPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigrestApiPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "eventlogconfigscte104GET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigscte104PUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigscte104PUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "eventlogconfigsdiInputRateGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigsdiInputRatePUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigsdiInputRatePUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "eventlogconfigsdiInputStandardGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigsdiInputStandardPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigsdiInputStandardPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "eventlogconfigsfpGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigsfpPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventlogconfigsfpPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "eventloglogsGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "log": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/eventloglogsGETlog"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventloglogsGETlog": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "eventloglogsPUT": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "log": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/eventloglogsPUTlog"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eventloglogsPUTlog": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "eventloglogsPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "clear"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "eyeanalysisParametersGET": {
            "type": "object",
            "properties": {
                "amplitudeMeasurementWindowOffset_percent": {
                    "type": "integer"
                },
                "amplitudeMeasurementWindowSize_percent": {
                    "type": "integer"
                },
                "analysisMethod": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eyeanalysisParametersPUT": {
            "type": "object",
            "properties": {
                "amplitudeMeasurementWindowOffset_percent": {
                    "type": "integer"
                },
                "amplitudeMeasurementWindowSize_percent": {
                    "type": "integer"
                },
                "analysisMethod": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "eyeanalysisParametersPUTparameter": {
            "type": "object",
            "properties": {
                "amplitudeMeasurementWindowOffset_percent": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100
                },
                "amplitudeMeasurementWindowSize_percent": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100
                },
                "analysisMethod": {
                    "type": "string",
                    "enum": [
                        "mode",
                        "shorthMean"
                    ]
                }
            }
        },
        "eyestatusGET": {
            "type": "object",
            "properties": {
                "dcOffset_mV": {
                    "type": "integer"
                },
                "fallTime_ps": {
                    "type": "number"
                },
                "inputIsStable": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "maxVoltage_mV": {
                    "type": "number"
                },
                "message": {
                    "type": "string"
                },
                "minVoltage_mV": {
                    "type": "number"
                },
                "riseTime_ps": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatoraudioGET": {
            "type": "object",
            "properties": {
                "audioGroup": {
                    "type": "object",
                    "properties": {
                        "audioGroup1": {
                            "type": "boolean"
                        },
                        "audioGroup2": {
                            "type": "boolean"
                        },
                        "audioGroup3": {
                            "type": "boolean"
                        },
                        "audioGroup4": {
                            "type": "boolean"
                        },
                        "audioGroup5": {
                            "type": "boolean"
                        },
                        "audioGroup6": {
                            "type": "boolean"
                        },
                        "audioGroup7": {
                            "type": "boolean"
                        },
                        "audioGroup8": {
                            "type": "boolean"
                        }
                    }
                },
                "customConfig": {
                    "type": "object",
                    "properties": {
                        "channels": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/generatoraudioGETchannels"
                            }
                        },
                        "numGroups": {
                            "type": "integer"
                        }
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "quickConfig": {
                    "type": "object",
                    "properties": {
                        "gainType": {
                            "type": "string"
                        },
                        "gain_dBFS": {
                            "type": "integer"
                        },
                        "pitch": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "integer"
                },
                "subImage": {
                    "type": "object",
                    "properties": {
                        "subImage1": {
                            "type": "boolean"
                        },
                        "subImage2": {
                            "type": "boolean"
                        },
                        "subImage3": {
                            "type": "boolean"
                        },
                        "subImage4": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "generatoraudioGETchannels": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "integer"
                },
                "frequency_Hz": {
                    "type": "integer"
                },
                "gain_dBFS": {
                    "type": "integer"
                }
            }
        },
        "generatoraudioPUTparameter": {
            "type": "object",
            "properties": {
                "audioGroup": {
                    "type": "object",
                    "properties": {
                        "audioGroup1": {
                            "type": "boolean"
                        },
                        "audioGroup2": {
                            "type": "boolean"
                        },
                        "audioGroup3": {
                            "type": "boolean"
                        },
                        "audioGroup4": {
                            "type": "boolean"
                        },
                        "audioGroup5": {
                            "type": "boolean"
                        },
                        "audioGroup6": {
                            "type": "boolean"
                        },
                        "audioGroup7": {
                            "type": "boolean"
                        },
                        "audioGroup8": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "audioGroup2",
                        "audioGroup3",
                        "audioGroup4",
                        "audioGroup5",
                        "audioGroup6",
                        "audioGroup7",
                        "audioGroup8",
                        "audioGroup1"
                    ]
                },
                "customConfig": {
                    "type": "object",
                    "properties": {
                        "channels": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/generatoraudioPUTparameterchannels"
                            }
                        },
                        "frequency": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 24000
                        },
                        "numGroups": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                4,
                                6,
                                8
                            ]
                        }
                    },
                    "required": [
                        "frequency",
                        "channels"
                    ]
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "Off",
                        "Fixed Tone",
                        "Chromatic Scale",
                        "Custom"
                    ]
                },
                "quickConfig": {
                    "type": "object",
                    "properties": {
                        "gain": {
                            "type": "integer",
                            "minimum": -144,
                            "maximum": 0
                        },
                        "gainType": {
                            "type": "string",
                            "enum": [
                                "Fixed Levels",
                                "Ramp Levels"
                            ]
                        },
                        "pitch": {
                            "type": "string",
                            "enum": [
                                "C 3",
                                "C♯/D♭ 3",
                                "D 3",
                                "D♯/E♭ 3",
                                "E 3",
                                "F 3",
                                "F♯/G♭ 3",
                                "G 3",
                                "G♯/A♭ 3",
                                "A 3",
                                "A♯/B♭ 3",
                                "B 3",
                                "C 4",
                                "C♯/D♭ 4",
                                "D 4",
                                "D♯/E♭ 4",
                                "E 4",
                                "F 4",
                                "F♯/G♭ 4",
                                "G 4",
                                "G♯/A♭ 4",
                                "A 4",
                                "A♯/B♭ 4",
                                "B 4",
                                "C 5",
                                "C♯/D♭ 5",
                                "D 5",
                                "D♯/E♭ 5",
                                "E 5",
                                "F 5",
                                "F♯/G♭ 5",
                                "G 5",
                                "G♯/A♭ 5",
                                "A 5",
                                "A♯/B♭ 5",
                                "B 5",
                                "C 6",
                                "C♯/D♭ 6",
                                "D 6",
                                "D♯/E♭ 6",
                                "E 6",
                                "F 6",
                                "F♯/G♭ 6",
                                "G 6",
                                "G♯/A♭ 6",
                                "A 6",
                                "A♯/B♭ 6",
                                "B 6",
                                "C 7"
                            ]
                        }
                    },
                    "required": [
                        "gain",
                        "gainType",
                        "pitch"
                    ]
                },
                "subImage": {
                    "type": "object",
                    "properties": {
                        "subImage1": {
                            "type": "boolean"
                        },
                        "subImage2": {
                            "type": "boolean"
                        },
                        "subImage3": {
                            "type": "boolean"
                        },
                        "subImage4": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "subImage1",
                        "subImage2",
                        "subImage3",
                        "subImage4"
                    ]
                }
            }
        },
        "generatoraudioPUTparameterchannels": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 31
                },
                "frequency": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 24000
                },
                "gain": {
                    "type": "integer",
                    "minimum": -144,
                    "maximum": 0
                }
            },
            "required": [
                "channel",
                "frequency",
                "gain"
            ]
        },
        "generatorbouncingBoxGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorbouncingBoxPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorbouncingBoxPUTparameter": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "generatorjitterInsertionGET": {
            "type": "object",
            "properties": {
                "AmplitudePeakToPeak_ui": {
                    "type": "number"
                },
                "frequency_Hz": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorjitterInsertionPUT": {
            "type": "object",
            "properties": {
                "AmplitudePeakToPeak_ui": {
                    "type": "number"
                },
                "frequency_Hz": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorjitterInsertionPUTparameter": {
            "type": "object",
            "properties": {
                "AmplitudePeakToPeak_ui": {
                    "type": "number",
                    "minimum": 0.01,
                    "maximum": 127.99
                },
                "frequency_Hz": {
                    "type": "number",
                    "minimum": 10,
                    "maximum": 10000000
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "Disabled",
                        "Sine"
                    ]
                }
            }
        },
        "generatoroutputCopyGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatoroutputCopyPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatoroutputCopyPUTparameter": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "generatorprbsGET": {
            "type": "object",
            "properties": {
                "invert": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorprbsPUT": {
            "type": "object",
            "properties": {
                "invert": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorprbsPUTparameter": {
            "type": "object",
            "properties": {
                "invert": {
                    "type": "boolean"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "Disabled",
                        "PRBS-7",
                        "PRBS-9",
                        "PRBS-15",
                        "PRBS-23",
                        "PRBS-31"
                    ]
                }
            }
        },
        "generatorsdiDriverGainGET": {
            "type": "object",
            "properties": {
                "driverGain_percent": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorsdiDriverGainPUTparameter": {
            "type": "object",
            "properties": {
                "driverGain_percent": {
                    "type": "integer",
                    "minimum": 90,
                    "maximum": 110
                }
            }
        },
        "generatorsdiDriverPreEmphasisGET": {
            "type": "object",
            "properties": {
                "driverPreEmphasis": {
                    "type": "string"
                },
                "driverPreEmphasisTimeConstant": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorsdiDriverPreEmphasisPUTparameter": {
            "type": "object",
            "properties": {
                "driverPreEmphasis": {
                    "type": "string",
                    "enum": [
                        "Disabled",
                        "0.5 dB",
                        "1.0 dB",
                        "1.5 dB"
                    ]
                },
                "driverPreEmphasisTimeConstant": {
                    "type": "string",
                    "enum": [
                        "Default",
                        "Div 2",
                        "Div 4",
                        "Div 8"
                    ]
                }
            }
        },
        "generatorsdiOutputMuteGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "sdiOutputMuteA": {
                    "type": "boolean"
                },
                "sdiOutputMuteB": {
                    "type": "boolean"
                },
                "sdiOutputMuteC": {
                    "type": "boolean"
                },
                "sdiOutputMuteD": {
                    "type": "boolean"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorsdiOutputMutePUT": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "sdiOutputMuteA": {
                    "type": "boolean"
                },
                "sdiOutputMuteB": {
                    "type": "boolean"
                },
                "sdiOutputMuteC": {
                    "type": "boolean"
                },
                "sdiOutputMuteD": {
                    "type": "boolean"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorsdiOutputMutePUTparameter": {
            "type": "object",
            "properties": {
                "sdiOutputMuteA": {
                    "type": "boolean"
                },
                "sdiOutputMuteB": {
                    "type": "boolean"
                },
                "sdiOutputMuteC": {
                    "type": "boolean"
                },
                "sdiOutputMuteD": {
                    "type": "boolean"
                }
            }
        },
        "generatorsdiScramblerGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorsdiScramblerPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorsdiScramblerPUTparameter": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "generatorstandards1280x720p25YCbCr%3A422%3A101.5G_HLG_Rec.2020100%25%20BarsGET": {
            "type": "object",
            "properties": {
                "generating": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorstandards1280x720p25YCbCr%3A422%3A101.5G_HLG_Rec.2020100%25%20BarsPUT": {
            "type": "object",
            "properties": {
                "generating": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorstandards1280x720p25YCbCr%3A422%3A101.5G_HLG_Rec.2020100%25%20BarsPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "start"
                    ]
                },
                "pathological": {
                    "type": "object",
                    "properties": {
                        "pairs": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 16384
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "Eq",
                                "PLL",
                                "CLK",
                                "CheckField + CLK",
                                "CheckField"
                            ]
                        }
                    },
                    "required": [
                        "pairs",
                        "type"
                    ]
                }
            },
            "required": [
                "action"
            ]
        },
        "generatorstatusGET": {
            "type": "object",
            "properties": {
                "audio": {
                    "type": "object",
                    "properties": {
                        "groups": {
                            "type": "integer"
                        },
                        "inserting": {
                            "type": "boolean"
                        }
                    }
                },
                "bouncingBox": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        }
                    }
                },
                "jitterInsertion": {
                    "type": "object",
                    "properties": {
                        "AmplitudePeakToPeak_ui": {
                            "type": "number"
                        },
                        "frequency_Hz": {
                            "type": "integer"
                        },
                        "mode": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "outputCopy": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        }
                    }
                },
                "pathological": {
                    "type": "object",
                    "properties": {
                        "pairs": {
                            "type": "integer"
                        },
                        "pathologicalCounters": {
                            "type": "object",
                            "properties": {
                                "sdiOutA": {
                                    "type": "object",
                                    "properties": {
                                        "eqRate_perSecond": {
                                            "type": "integer"
                                        },
                                        "pllRate_perSecond": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "sdiOutB": {
                                    "type": "object",
                                    "properties": {
                                        "eqRate_perSecond": {
                                            "type": "integer"
                                        },
                                        "pllRate_perSecond": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "sdiOutC": {
                                    "type": "object",
                                    "properties": {
                                        "eqRate_perSecond": {
                                            "type": "integer"
                                        },
                                        "pllRate_perSecond": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "sdiOutD": {
                                    "type": "object",
                                    "properties": {
                                        "eqRate_perSecond": {
                                            "type": "integer"
                                        },
                                        "pllRate_perSecond": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "pattern": {
                    "type": "string"
                },
                "prbs": {
                    "type": "object",
                    "properties": {
                        "invert": {
                            "type": "boolean"
                        },
                        "mode": {
                            "type": "string"
                        }
                    }
                },
                "sdiDriverGain": {
                    "type": "object",
                    "properties": {
                        "driverGain_percent": {
                            "type": "integer"
                        }
                    }
                },
                "sdiDriverPreEmphasis": {
                    "type": "object",
                    "properties": {
                        "driverPreEmphasis": {
                            "type": "string"
                        },
                        "driverPreEmphasisTimeConstant": {
                            "type": "string"
                        }
                    }
                },
                "sdiScrambler": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        }
                    }
                },
                "standard": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "syncBitInserter": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        }
                    }
                },
                "usefulLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/generatorstatusGETusefulLinks"
                    }
                }
            }
        },
        "generatorstatusGETusefulLinks": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                }
            }
        },
        "generatorsyncBitInserterGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorsyncBitInserterPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "generatorsyncBitInserterPUTparameter": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "inputOutputsdiIninputTypeGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "inputOutputsdiIninputTypePUT": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "inputOutputsdiIninputTypePUTparameter": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "bnc",
                        "sfp"
                    ]
                }
            },
            "required": [
                "type"
            ]
        },
        "inputOutputsdiOutbncgeneratorOutputCopyGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "inputOutputsdiOutbncgeneratorOutputCopyPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "inputOutputsdiOutbncgeneratorOutputCopyPUTparameter": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "inputOutputsdiOutbncloopSdiBncInGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "inputOutputsdiOutbncloopSdiBncInPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "inputOutputsdiOutbncloopSdiBncInPUTparameter": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "inputOutputsdiOutbncsdiOutputSettingGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "sdiOutputA": {
                    "type": "string"
                },
                "sdiOutputB": {
                    "type": "string"
                },
                "sdiOutputC": {
                    "type": "string"
                },
                "sdiOutputD": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "inputOutputsdiOutbncsdiOutputSettingPUT": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "sdiOutputA": {
                    "type": "string"
                },
                "sdiOutputB": {
                    "type": "string"
                },
                "sdiOutputC": {
                    "type": "string"
                },
                "sdiOutputD": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "inputOutputsdiOutbncsdiOutputSettingPUTparameter": {
            "type": "object",
            "properties": {
                "sdiOutputA": {
                    "type": "string",
                    "enum": [
                        "off",
                        "generator",
                        "loopSdiIn"
                    ]
                },
                "sdiOutputB": {
                    "type": "string",
                    "enum": [
                        "off",
                        "generator",
                        "loopSdiIn"
                    ]
                },
                "sdiOutputC": {
                    "type": "string",
                    "enum": [
                        "off",
                        "generator",
                        "loopSdiIn"
                    ]
                },
                "sdiOutputD": {
                    "type": "string",
                    "enum": [
                        "off",
                        "generator",
                        "loopSdiIn"
                    ]
                }
            }
        },
        "inputOutputsdiOutoutputTypeGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "inputOutputsdiOutoutputTypePUT": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "inputOutputsdiOutoutputTypePUTparameter": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "bnc",
                        "sfp"
                    ]
                }
            },
            "required": [
                "type"
            ]
        },
        "inputOutputsdiOutsfpgeneratorOutputCopyGET": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "inputOutputsdiOutsfpgeneratorOutputCopyPUT": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "inputOutputsdiOutsfpgeneratorOutputCopyPUTparameter": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ]
        },
        "inputOutputsdiOutsfpsdiOutputSettingGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "sdiOutputA": {
                    "type": "string"
                },
                "sdiOutputB": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "inputOutputsdiOutsfpsdiOutputSettingPUTparameter": {
            "type": "object",
            "properties": {
                "sdiOutputA": {
                    "type": "string",
                    "enum": [
                        "off",
                        "generator"
                    ]
                },
                "sdiOutputB": {
                    "type": "string",
                    "enum": [
                        "off",
                        "generator"
                    ]
                },
                "sdiOutputC": {
                    "type": "string",
                    "enum": [
                        "off",
                        "generator"
                    ]
                },
                "sdiOutputD": {
                    "type": "string",
                    "enum": [
                        "off",
                        "generator"
                    ]
                }
            }
        },
        "inputOutputstatusGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "sdiIn": {
                    "type": "object",
                    "properties": {
                        "clockFrequency": {
                            "type": "object",
                            "properties": {}
                        },
                        "dataRate": {
                            "type": "object",
                            "properties": {}
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "sdiOut": {
                    "type": "object",
                    "properties": {
                        "dataRate": {
                            "type": "object",
                            "properties": {}
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "jitterstatusGET": {
            "type": "object",
            "properties": {
                "100000_Hz": {
                    "type": "number"
                },
                "10000_Hz": {
                    "type": "number"
                },
                "1000_Hz": {
                    "type": "number"
                },
                "100_Hz": {
                    "type": "number"
                },
                "10_Hz": {
                    "type": "number"
                },
                "jitterLocked": {
                    "type": "boolean"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "links": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                }
            }
        },
        "presetsuserPresetsDocumentation_4.5GET": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "lastModifiedDate": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "presetName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presetsuserPresetsDocumentation_4.5PUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "load",
                        "rename"
                    ]
                },
                "newPresetName": {
                    "type": "string"
                }
            },
            "required": [
                "action"
            ]
        },
        "presetsuserPresetsNew%2520PresetGET": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "lastModifiedDate": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "presetName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presetsuserPresetsNew%2520PresetPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "load",
                        "rename"
                    ]
                },
                "newPresetName": {
                    "type": "string"
                }
            },
            "required": [
                "action"
            ]
        },
        "presetsuserPresetsPOST": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "presetName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presetsuserPresetsPOSTparameter": {
            "type": "object",
            "properties": {}
        },
        "presetsuserPresetslastKnownState_sdiStressrenamedrenamedrenamedrenamedrenamedrenamedrenamedGET": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "lastModifiedDate": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "presetName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "presetsuserPresetslastKnownState_sdiStressrenamedrenamedrenamedrenamedrenamedrenamedrenamedPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "load",
                        "rename"
                    ]
                },
                "newPresetName": {
                    "type": "string"
                }
            },
            "required": [
                "action"
            ]
        },
        "screenshotsimages2021-11-17T110613renamedrenamedGET": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "lastModifiedDate": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "usefulLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/screenshotsimages2021-11-17T110613renamedrenamedGETusefulLinks"
                    }
                }
            }
        },
        "screenshotsimages2021-11-17T110613renamedrenamedGETusefulLinks": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "screenshotsimages2021-11-17T110613renamedrenamedPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "rename"
                    ]
                },
                "newFilename": {
                    "type": "string"
                }
            },
            "required": [
                "action"
            ]
        },
        "screenshotsimages2021-11-17T110902renamedrenamedGET": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "lastModifiedDate": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "usefulLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/screenshotsimages2021-11-17T110902renamedrenamedGETusefulLinks"
                    }
                }
            }
        },
        "screenshotsimages2021-11-17T110902renamedrenamedGETusefulLinks": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "screenshotsimages2021-11-17T110902renamedrenamedPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "rename"
                    ]
                },
                "newFilename": {
                    "type": "string"
                }
            },
            "required": [
                "action"
            ]
        },
        "screenshotsimages2021-11-17T112027renamedGET": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "lastModifiedDate": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "usefulLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/screenshotsimages2021-11-17T112027renamedGETusefulLinks"
                    }
                }
            }
        },
        "screenshotsimages2021-11-17T112027renamedGETusefulLinks": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "screenshotsimages2021-11-17T112027renamedPUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "rename"
                    ]
                },
                "newFilename": {
                    "type": "string"
                }
            },
            "required": [
                "action"
            ]
        },
        "screenshotsimages2021-11-17T144555GET": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "lastModifiedDate": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "usefulLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/screenshotsimages2021-11-17T144555GETusefulLinks"
                    }
                }
            }
        },
        "screenshotsimages2021-11-17T144555GETusefulLinks": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "screenshotsimages2021-11-17T144555PUTparameter": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "rename"
                    ]
                },
                "newFilename": {
                    "type": "string"
                }
            },
            "required": [
                "action"
            ]
        },
        "screenshotsimagesPOST": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "usefulLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/screenshotsimagesPOSTusefulLinks"
                    }
                }
            }
        },
        "screenshotsimagesPOSTparameter": {
            "type": "object",
            "properties": {}
        },
        "screenshotsimagesPOSTusefulLinks": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                }
            }
        },
        "screenshotslatestGET": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "lastModifiedDate": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "usefulLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/screenshotslatestGETusefulLinks"
                    }
                }
            }
        },
        "screenshotslatestGETusefulLinks": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "screenshotsoldestGET": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "lastModifiedDate": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "usefulLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/screenshotsoldestGETusefulLinks"
                    }
                }
            }
        },
        "screenshotsoldestGETusefulLinks": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "sfpInfosfpAGET": {
            "type": "object",
            "properties": {
                "approved": {
                    "type": "boolean"
                },
                "bitRate_MBd": {
                    "type": "integer"
                },
                "connectorType": {
                    "type": "string"
                },
                "encoding": {
                    "type": "string"
                },
                "extIdentifier": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "linkLengthOm1_m": {
                    "type": "integer"
                },
                "linkLengthOm2_m": {
                    "type": "integer"
                },
                "linkLengthOm3_m": {
                    "type": "integer"
                },
                "linkLengthOm4_m": {
                    "type": "integer"
                },
                "linkLengthSmf_Km": {
                    "type": "integer"
                },
                "linkLengthSmf_m": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "opticalWavelength_nm": {
                    "type": "integer"
                },
                "partNumber": {
                    "type": "string"
                },
                "present": {
                    "type": "boolean"
                },
                "rateIdentifier": {
                    "type": "string"
                },
                "revision": {
                    "type": "string"
                },
                "rxPowerHighAlarm_dBm": {
                    "type": "integer"
                },
                "rxPowerHighAlarm_mW": {
                    "type": "integer"
                },
                "rxPowerHighWarning_dBm": {
                    "type": "integer"
                },
                "rxPowerHighWarning_mW": {
                    "type": "integer"
                },
                "rxPowerLowAlarm_dBm": {
                    "type": "integer"
                },
                "rxPowerLowAlarm_mW": {
                    "type": "integer"
                },
                "rxPowerLowWarning_dBm": {
                    "type": "integer"
                },
                "rxPowerLowWarning_mW": {
                    "type": "integer"
                },
                "rxPower_dBm": {
                    "type": "integer"
                },
                "rxPower_mW": {
                    "type": "integer"
                },
                "serialNumber": {
                    "type": "string"
                },
                "sff8472Compliance": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "temperatureHighAlarm_C": {
                    "type": "integer"
                },
                "temperatureHighAlarm_F": {
                    "type": "integer"
                },
                "temperatureHighWarning_C": {
                    "type": "integer"
                },
                "temperatureHighWarning_F": {
                    "type": "integer"
                },
                "temperatureLowAlarm_C": {
                    "type": "integer"
                },
                "temperatureLowAlarm_F": {
                    "type": "integer"
                },
                "temperatureLowWarning_C": {
                    "type": "integer"
                },
                "temperatureLowWarning_F": {
                    "type": "integer"
                },
                "temperature_C": {
                    "type": "integer"
                },
                "temperature_F": {
                    "type": "integer"
                },
                "transceiverInfo": {
                    "type": "object",
                    "properties": {
                        "10GEthernet": {
                            "type": "string"
                        },
                        "escon": {
                            "type": "string"
                        },
                        "ethernet": {
                            "type": "string"
                        },
                        "fibreChannelLinkLength": {
                            "type": "string"
                        },
                        "fibreChannelSpeed": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sfpInfosfpAGETfibreChannelSpeed"
                            }
                        },
                        "fibreChannelTechnology": {
                            "type": "string"
                        },
                        "fibreChannelTransmissionMedia": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sfpInfosfpAGETfibreChannelTransmissionMedia"
                            }
                        },
                        "infiniband": {
                            "type": "string"
                        },
                        "sfpPlusCableTechnology": {
                            "type": "string"
                        },
                        "sonet": {
                            "type": "string"
                        }
                    }
                },
                "txPowerHighAlarm_dBm": {
                    "type": "integer"
                },
                "txPowerHighAlarm_mW": {
                    "type": "integer"
                },
                "txPowerHighWarning_dBm": {
                    "type": "integer"
                },
                "txPowerHighWarning_mW": {
                    "type": "integer"
                },
                "txPowerLowAlarm_dBm": {
                    "type": "integer"
                },
                "txPowerLowAlarm_mW": {
                    "type": "integer"
                },
                "txPowerLowWarning_dBm": {
                    "type": "integer"
                },
                "txPowerLowWarning_mW": {
                    "type": "integer"
                },
                "txPower_dBm": {
                    "type": "integer"
                },
                "txPower_mW": {
                    "type": "integer"
                },
                "vendorName": {
                    "type": "string"
                },
                "vendorOui": {
                    "type": "string"
                },
                "voltage": {
                    "type": "integer"
                },
                "voltageHighAlarm": {
                    "type": "integer"
                },
                "voltageHighWarning": {
                    "type": "integer"
                },
                "voltageLowAlarm": {
                    "type": "integer"
                },
                "voltageLowWarning": {
                    "type": "integer"
                }
            }
        },
        "sfpInfosfpAGETfibreChannelTransmissionMedia": {
            "type": "string"
        },
        "sfpInfosfpBGET": {
            "type": "object",
            "properties": {
                "approved": {
                    "type": "boolean"
                },
                "bitRate_MBd": {
                    "type": "integer"
                },
                "connectorType": {
                    "type": "string"
                },
                "encoding": {
                    "type": "string"
                },
                "extIdentifier": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "linkLengthOm1_m": {
                    "type": "integer"
                },
                "linkLengthOm2_m": {
                    "type": "integer"
                },
                "linkLengthOm3_m": {
                    "type": "integer"
                },
                "linkLengthOm4_m": {
                    "type": "integer"
                },
                "linkLengthSmf_Km": {
                    "type": "integer"
                },
                "linkLengthSmf_m": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "opticalWavelength_nm": {
                    "type": "integer"
                },
                "partNumber": {
                    "type": "string"
                },
                "present": {
                    "type": "boolean"
                },
                "rateIdentifier": {
                    "type": "string"
                },
                "revision": {
                    "type": "string"
                },
                "rxPowerHighAlarm_dBm": {
                    "type": "integer"
                },
                "rxPowerHighAlarm_mW": {
                    "type": "integer"
                },
                "rxPowerHighWarning_dBm": {
                    "type": "integer"
                },
                "rxPowerHighWarning_mW": {
                    "type": "integer"
                },
                "rxPowerLowAlarm_dBm": {
                    "type": "integer"
                },
                "rxPowerLowAlarm_mW": {
                    "type": "integer"
                },
                "rxPowerLowWarning_dBm": {
                    "type": "integer"
                },
                "rxPowerLowWarning_mW": {
                    "type": "integer"
                },
                "rxPower_dBm": {
                    "type": "integer"
                },
                "rxPower_mW": {
                    "type": "integer"
                },
                "serialNumber": {
                    "type": "string"
                },
                "sff8472Compliance": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "temperatureHighAlarm_C": {
                    "type": "integer"
                },
                "temperatureHighAlarm_F": {
                    "type": "integer"
                },
                "temperatureHighWarning_C": {
                    "type": "integer"
                },
                "temperatureHighWarning_F": {
                    "type": "integer"
                },
                "temperatureLowAlarm_C": {
                    "type": "integer"
                },
                "temperatureLowAlarm_F": {
                    "type": "integer"
                },
                "temperatureLowWarning_C": {
                    "type": "integer"
                },
                "temperatureLowWarning_F": {
                    "type": "integer"
                },
                "temperature_C": {
                    "type": "integer"
                },
                "temperature_F": {
                    "type": "integer"
                },
                "transceiverInfo": {
                    "type": "object",
                    "properties": {
                        "10GEthernet": {
                            "type": "string"
                        },
                        "escon": {
                            "type": "string"
                        },
                        "ethernet": {
                            "type": "string"
                        },
                        "fibreChannelLinkLength": {
                            "type": "string"
                        },
                        "fibreChannelSpeed": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sfpInfosfpBGETfibreChannelSpeed"
                            }
                        },
                        "fibreChannelTechnology": {
                            "type": "string"
                        },
                        "fibreChannelTransmissionMedia": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sfpInfosfpBGETfibreChannelTransmissionMedia"
                            }
                        },
                        "infiniband": {
                            "type": "string"
                        },
                        "sfpPlusCableTechnology": {
                            "type": "string"
                        },
                        "sonet": {
                            "type": "string"
                        }
                    }
                },
                "txPowerHighAlarm_dBm": {
                    "type": "integer"
                },
                "txPowerHighAlarm_mW": {
                    "type": "integer"
                },
                "txPowerHighWarning_dBm": {
                    "type": "integer"
                },
                "txPowerHighWarning_mW": {
                    "type": "integer"
                },
                "txPowerLowAlarm_dBm": {
                    "type": "integer"
                },
                "txPowerLowAlarm_mW": {
                    "type": "integer"
                },
                "txPowerLowWarning_dBm": {
                    "type": "integer"
                },
                "txPowerLowWarning_mW": {
                    "type": "integer"
                },
                "txPower_dBm": {
                    "type": "integer"
                },
                "txPower_mW": {
                    "type": "integer"
                },
                "vendorName": {
                    "type": "string"
                },
                "vendorOui": {
                    "type": "string"
                },
                "voltage": {
                    "type": "integer"
                },
                "voltageHighAlarm": {
                    "type": "integer"
                },
                "voltageHighWarning": {
                    "type": "integer"
                },
                "voltageLowAlarm": {
                    "type": "integer"
                },
                "voltageLowWarning": {
                    "type": "integer"
                }
            }
        },
        "sfpInfosfpBGETfibreChannelTransmissionMedia": {
            "type": "string"
        },
        "systemaboutGET": {
            "type": "object",
            "properties": {
                "currentFirmwareMode": {
                    "type": "string"
                },
                "currentSystemMode": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "driver": {
                    "type": "object",
                    "properties": {
                        "A": {
                            "type": "object",
                            "properties": {
                                "gain_1.5G": {
                                    "type": "integer"
                                },
                                "gain_12G": {
                                    "type": "integer"
                                },
                                "gain_3G": {
                                    "type": "integer"
                                },
                                "gain_6G": {
                                    "type": "integer"
                                }
                            }
                        },
                        "B": {
                            "type": "object",
                            "properties": {
                                "gain_1.5G": {
                                    "type": "integer"
                                },
                                "gain_12G": {
                                    "type": "integer"
                                },
                                "gain_3G": {
                                    "type": "integer"
                                },
                                "gain_6G": {
                                    "type": "integer"
                                }
                            }
                        },
                        "C": {
                            "type": "object",
                            "properties": {
                                "gain_1.5G": {
                                    "type": "integer"
                                },
                                "gain_12G": {
                                    "type": "integer"
                                },
                                "gain_3G": {
                                    "type": "integer"
                                },
                                "gain_6G": {
                                    "type": "integer"
                                }
                            }
                        },
                        "D": {
                            "type": "object",
                            "properties": {
                                "gain_1.5G": {
                                    "type": "integer"
                                },
                                "gain_12G": {
                                    "type": "integer"
                                },
                                "gain_3G": {
                                    "type": "integer"
                                },
                                "gain_6G": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "eye": {
                    "type": "object",
                    "properties": {
                        "dcGain": {
                            "type": "string"
                        },
                        "displayGains": {
                            "type": "object",
                            "properties": {
                                "gain_1.5G": {
                                    "type": "string"
                                },
                                "gain_12G": {
                                    "type": "string"
                                },
                                "gain_270M": {
                                    "type": "string"
                                },
                                "gain_3G": {
                                    "type": "string"
                                },
                                "gain_6G": {
                                    "type": "string"
                                }
                            }
                        },
                        "eyeCalRevision": {
                            "type": "integer"
                        },
                        "gain": {
                            "type": "integer"
                        },
                        "measurementGains": {
                            "type": "object",
                            "properties": {
                                "gain_1.5G": {
                                    "type": "string"
                                },
                                "gain_12G": {
                                    "type": "string"
                                },
                                "gain_270M": {
                                    "type": "string"
                                },
                                "gain_3G": {
                                    "type": "string"
                                },
                                "gain_6G": {
                                    "type": "string"
                                }
                            }
                        },
                        "offset": {
                            "type": "integer"
                        }
                    }
                },
                "fpgaVersion": {
                    "type": "string"
                },
                "frontPanelRevision": {
                    "type": "string"
                },
                "imageVersion": {
                    "type": "string"
                },
                "jitterAdcSpan": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "mainBoardRevision": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "mezzanineBoardRevision": {
                    "type": "string"
                },
                "sha": {
                    "type": "string"
                },
                "softwareBranch": {
                    "type": "string"
                },
                "softwareNumber": {
                    "type": "string"
                },
                "softwareVersion": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "timeOnUnit": {
                    "type": "string"
                },
                "toolchainVersion": {
                    "type": "string"
                }
            }
        },
        "timingreferenceGET": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/links"
                    }
                },
                "message": {
                    "type": "string"
                },
                "sdi": {
                    "type": "object",
                    "properties": {
                        "inputMeasurementOffsetType": {
                            "type": "string"
                        },
                        "inputTimeOffset_us": {
                            "type": "string"
                        },
                        "measuredTiming": {
                            "type": "object",
                            "properties": {
                                "sdiCo-Timing": {
                                    "type": "object",
                                    "properties": {}
                                },
                                "sdiSystemReference": {
                                    "type": "object",
                                    "properties": {
                                        "lines": {
                                            "type": "integer"
                                        },
                                        "pixels": {
                                            "type": "integer"
                                        },
                                        "timing_us": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "timingMasterInputUsed": {
                                    "type": "string"
                                }
                            }
                        },
                        "referenceTimingMeterRange": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "integer"
                },
                "systemReference": {
                    "type": "object",
                    "properties": {
                        "systemReferenceType": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "timingreferencePUTparameter": {
            "type": "object",
            "properties": {
                "inputCommand": {
                    "type": "string",
                    "enum": [
                        "setInputMeasurementOffsetToCurrent",
                        "clearInputMeasurementOffset"
                    ]
                },
                "inputMeasurementLineOffset": {
                    "type": "integer",
                    "minimum": -999999,
                    "maximum": 999999
                },
                "inputMeasurementOffsetType": {
                    "type": "string",
                    "enum": [
                        "Time",
                        "Lines And Pixels"
                    ]
                },
                "inputMeasurementPixelOffset": {
                    "type": "integer",
                    "minimum": -999999,
                    "maximum": 999999
                },
                "referenceTimingMeterRange": {
                    "type": "string",
                    "enum": [
                        "+/- 0.1 line",
                        "+/- 0.5 line",
                        "+/- 0.5 frame"
                    ]
                },
                "systemReferenceType": {
                    "type": "string",
                    "enum": [
                        "Free Run",
                        "External Reference",
                        "SDI"
                    ]
                }
            }
        }
    },
    "schemes": [
        "http"
    ]
}